{"version":3,"sources":["Components/Add/Add.js","Components/Item/Item.js","container/List/List.js","axios-post.js","Components/Settings/Settings.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["add","props","Grid","container","spacing","item","xs","htmlFor","type","onChange","event","inputHandler","value","title","onClick","buttonHandler","checkboxTheme","createMuiTheme","palette","primary","main","blue","secondary","default","green","ThemeProvider","theme","Checkbox","checkboxHandler","id","color","property","checked","propertyHandler","style","textDecoration","marginLeft","fontWeight","deleteButtonHandler","List","index","data","updateData","newData","splice","map","items","this","console","log","PureComponent","instance","axios","create","baseURL","Settings","switchTheme","onlineModeHandler","onlineMode","updateOnlineMode","Switch","name","Component","App","state","target","setState","length","documentOnlineMode","JSON","parse","localStorage","getItem","get","then","responce","Object","values","valueOf","catch","error","documentData","prevProps","prevState","setItem","stringify","post","className","Add","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3f0740f4.chunk.js","sourcesContent":["import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nconst add = (props) => {\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12}>\n            <form>\n                <label htmlFor=\"title\">\n                    <h3>What's Your Plan Today</h3>\n                </label>\n                <input\n                    type=\"text\"\n                    onChange={(event)=>props.inputHandler(event)}\n                    value={props.title}\n                />\n                <input \n                    type=\"button\" \n                    value=\"Add\"\n                    onClick={props.buttonHandler}/>\n            </form>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default add\n","import React from 'react'\nimport { blue, green } from '@material-ui/core/colors'\n// import { withStyles } from '@material-ui/core/styles'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Grid from '@material-ui/core/Grid'\n\n\n\nexport default function item (props){\n\n    const checkboxTheme = createMuiTheme({\n        palette: {\n          primary:{\n            main: blue[300],\n            },\n          secondary: {\n            main: blue[700],\n          },\n          default:{\n            main: green[300],\n          }\n        },\n      })\n    // const classes = useStyles()\n    return (\n        <div >\n            <Grid container spacing={3}>\n                <Grid item xs={10}>\n                <ThemeProvider theme={checkboxTheme}>\n                    <Checkbox \n                        onClick={()=>props.checkboxHandler(props.id)}\n                        color={!props.property?\"primary\":\"secondary\"}\n                        checked={props.checked}/>\n                 </ThemeProvider>\n                    <span \n                        onClick={()=>props.propertyHandler(props.id)}\n                        style={{ textDecoration: props.checked ? \"line-through\" : null,\n                            marginLeft:16, fontWeight: props.property ? \"bold\" : null,}}>\n                            {props.title}\n                    </span>\n                </Grid>\n                <Grid item xs={2}>\n                        <DeleteIcon \n                            onClick={()=>props.deleteButtonHandler(props.id)}\n                            style={{marginLeft: \"20%\"}}\n                        />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n","import React, { PureComponent } from 'react'\n// import axios from \"../../axios-post\"\n\nimport Item from '../../Components/Item/Item'\n\nexport default class List extends PureComponent {\n\n    checkboxHandler = (index)=>{\n        let data = [...this.props.data]\n        // console.log(\"checkbox debug\" ,data[index])\n        data[index].checked = !data[index].checked\n        // if(this.props.onlineMode){\n        //     axios.post(\"/data.json\", data)\n        //     .then(responce=>{\n        //         console.log(\"Post\", responce)\n        //     })\n        //     .catch(error=>console.log(error))\n        // }\n        this.props.updateData(data)\n    }\n\n    deleteButtonHandler = (index) =>{\n        let newData = [...this.props.data]\n        newData.splice(index,1)\n        newData.map((item, index)=>{\n            return item.id = index\n        })\n        \n        this.props.updateData(newData)\n        // if(newData.length === 0) newData = [{checked: false, id: 0, title: \"DEMO\"}]\n        // if(this.props.onlineMode){\n        //     axios.post(\"/data.json\", newData)\n        //     .then(responce=>{\n        //     console.log(\"Post\", responce)\n        //     // return axios.post(\"/\", this.state.data)\n        //     })\n        //     .catch(error=>console.log(error))\n        // }\n    }\n\n    propertyHandler = (index)=>{\n        let data = [...this.props.data]\n        // console.log(\"checkbox debug\" ,data[index])\n        data[index].property = !data[index].property\n        // if(this.props.onlineMode){\n        //     axios.post(\"/data.json\", data)\n        //     .then(responce=>{\n        //         console.log(\"Post\", responce)\n        //     })\n        //     .catch(error=>console.log(error))\n        // }\n        this.props.updateData(data)\n    }\n\n    render() {\n        const data = this.props.data\n        let items = <p>Loading .....</p>\n        items = data.map((item,index)=>{\n            let checked = item.checked\n            let title = item.title\n            let property = item.property\n            // console.log(this.props.data[index].checked)\n            return <Item \n                key={item.id+3} \n                id={item.id}\n                checked={checked} \n                checkboxHandler={this.checkboxHandler}\n                deleteButtonHandler={this.deleteButtonHandler}\n                propertyHandler={this.propertyHandler}\n                property={property}\n                title={title}/>\n        })\n        console.log(\"[List.js]: Full data\", data)\n        return (\n            <div>\n                {items}\n            </div>\n        )\n    }\n}\n\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://todo-online-hyy-default-rtdb.europe-west1.firebasedatabase.app/private\"\n})\n\nexport default instance","import React, { Component } from 'react'\nimport {Switch} from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport { blue, green} from '@material-ui/core/colors';\n\nexport default class Settings extends Component {\n\n    switchTheme = createMuiTheme({\n        palette: {\n          primary:{\n            main: blue[700],\n            },\n          secondary: {\n            main: green[300],\n          },\n        },\n      })\n\n      onlineModeHandler = ()=>{\n        let onlineMode = this.props.onlineMode;\n        onlineMode = !onlineMode;\n        this.props.updateOnlineMode(onlineMode);\n    }\n\n    render() {\n        return (\n            <Grid container spacing={3}>\n                {this.props.onlineMode ?\n                 <label style={{marginLeft: \"20px\"}}>Online</label>:\n                 <label style={{marginLeft: \"20px\"}}>Offline</label>\n                }\n                <Grid item xs={2}>\n                    <ThemeProvider theme={this.switchTheme}>\n                        <Switch \n                            checked={this.props.onlineMode}\n                            name=\"onlineMode\"\n                            id=\"onlineMde\"\n                            color=\"primary\"\n                            onChange={this.onlineModeHandler}\n                        />\n                    </ThemeProvider>\n                </Grid>\n                \n                   \n                \n            </Grid>\n        )\n    }\n}\n","import React, { PureComponent } from 'react'\n\n\nimport Add from \"./Components/Add/Add\"\nimport List from \"./container/List/List\"\nimport axios from \"./axios-post\"\nimport Settings from './Components/Settings/Settings'\n\nexport class App extends PureComponent {\n\n  state ={\n    title: '',\n    checked: false,\n    data: [],\n    onlineMode: false\n  }\n\n  componentDidMount(){\n    const documentOnlineMode = JSON.parse(localStorage.getItem(\"onlineMode\"))\n    if(documentOnlineMode!==null){\n      this.setState({\n        onlineMode: documentOnlineMode\n      })\n    }\n\n    if(documentOnlineMode){\n      axios.get(\"/data.json\")\n      .then(responce=>{\n        console.log(\"Mount data\", responce)\n        if(responce.data!==null){\n          const data = Object.values(responce.data.valueOf())\n          if(data[data.length-1][0].title === \"DEMO\"){\n            // console.log(data[data.length-1][0], \"_________\" )  \n            this.setState({\n              data: []\n            })\n          }\n          else\n          this.setState({\n            data: data[data.length-1]\n          })\n        }\n      })\n      .catch(error=>{\n        console.log(error)\n      })\n    }else{\n      const documentData = JSON.parse(localStorage.getItem(\"data\"))\n      if (documentData !== null){\n        this.setState({\n          data : documentData,\n      })\n    }\n  }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(prevState.onlineMode!==this.state.onlineMode){\n      localStorage.setItem(\"onlineMode\",JSON.stringify(this.state.onlineMode))\n    }\n    \n    if(prevState.data!==this.state.data || prevState.onlineMode!==this.state.onlineMode){\n      // console.log(prevState,\"#########\")\n      let data = this.state.data\n      if(!this.state.onlineMode){\n        localStorage.setItem(\"data\", JSON.stringify(data))\n      }else{\n        if(data.length === 0) data = [{checked: false, id: 0, title: \"DEMO\"}]\n        axios.post(\"/data.json\", data)\n        .then(responce=>{\n          console.log(\"Post\", responce)\n        })\n        .catch(error=>{\n          console.log(error)\n        })\n      }\n    }\n  }\n\n  inputHandler = (event)=>{\n    const value = event.target.value\n    this.setState({\n      title: value\n    })\n  }\n\n  buttonHandler = () =>{\n    const item = {\n      title: this.state.title,\n      checked: this.state.checked,\n      id: this.state.data.length,\n      property: false\n    }\n    const data =[...this.state.data, item]\n    if(this.state.title!==\"\")\n    this.setState({\n      data: data,\n      title: ''\n    })\n    else this.setState({\n      title: ''\n    })\n    // if(this.state.onlineMode){\n    //   axios.post(\"/data.json\", data)\n    //     .then(responce=>{\n    //       console.log(\"Post\", responce)\n    //     })\n    //     .catch(error=>console.log(error))\n    // }\n  }\n\n  updateData = (item) =>{\n    this.setState({\n      data: item\n    })\n  }\n\n  updateOnlineMode = (item) =>{\n    this.setState({\n      onlineMode: item\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Add \n          title={this.state.title}\n          buttonHandler={this.buttonHandler}\n          inputHandler={this.inputHandler}\n          />\n        <br/>\n        <Settings\n          onlineMode={this.state.onlineMode}\n          updateOnlineMode={this.updateOnlineMode}\n        />\n        <List \n          data={this.state.data}\n          updateData={this.updateData}\n          onlineMode={this.state.onlineMode}\n          />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}